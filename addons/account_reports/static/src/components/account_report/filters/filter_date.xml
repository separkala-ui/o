<?xml version="1.0" encoding="UTF-8" ?>
<templates>
    <t t-name="account_reports.AccountReportFilterDateSelection">
        <t t-foreach="this.dateFilters(controller.cachedFilterOptions.date.mode)" t-as="dateFilter" t-key="dateFilter_index">
            <DropdownItem
                tag="'div'"
                class="{
                    'd-flex justify-content-between date_filter': true,
                    'date_filter_month': dateFilter.period === 'month',
                    'date_filter_quarter': dateFilter.period === 'quarter',
                    'date_filter_year': dateFilter.period === 'year',
                    'selected': this.isPeriodSelected(dateFilter.period),
                }"
                attrs="{
                    'data-period-type': dateFilter.period,
                    'data-mode': dateFilter.mode,
                }"
                onSelected="() => this.selectDateFilter(dateFilter.period, dateFilter.period != controller.cachedFilterOptions.date.period_type)"
                closingMode="'none'"
            >
                <div class="filter_name pe-3" t-out="dateFilter.name"/>
                <div class="d-flex justify-content-between">
                    <button
                        class="btn_previous_date fa fa-caret-left"
                        t-on-click="() => this.selectPreviousPeriod(dateFilter.period)"
                    />
                    <input
                        class="o_input input_current_date"
                        type="text"
                        t-att-data-value="this.displayPeriod(dateFilter.period)"
                        t-att-value="this.displayPeriod(dateFilter.period)"
                        t-att="{'readonly': dateFilter.mode === 'view'}"
                        t-on-change="ev => this.saveDateFilter(dateFilter.period, ev.target)"
                        t-on-click="ev => dateFilter.mode === 'view' and this.isPeriodSelected(dateFilter.period) and this.editDateFilter(dateFilter.period, ev.target)"
                    />
                    <button
                        class="btn_next_date fa fa-caret-right"
                        t-on-click="() => this.selectNextPeriod(dateFilter.period)"
                    />
                </div>
            </DropdownItem>
        </t>
    </t>

    <t t-name="account_reports.AccountReportFilterDate">
        <Dropdown
            menuClass="'account_report_filter date'"
            navigationOptions="dateNavigationOptions"
        >
            <button class="btn btn-secondary">
                <i class="fa fa-calendar me-1"/>
                <t t-out="controller.cachedFilterOptions.date.string"/>
            </button>

            <t t-set-slot="content">
                <t t-if="controller.cachedFilterOptions.date.mode === 'single'">
                    <DropdownItem
                        tag="'div'"
                        class="{ 'selected': this.isPeriodSelected('today') }"
                        attrs="{ 'data-period-type': 'today' }"
                        onSelected="() => this.selectDateFilter('today', 'today' != controller.cachedFilterOptions.date.filter)"
                        closingMode="'none'"
                    >
                        Today
                    </DropdownItem>

                    <t t-call="account_reports.AccountReportFilterDateSelection"/>

                    <div id="filter_date_divider_single" class="dropdown-divider"/>

                    <DropdownItem
                        tag="'div'"
                        class="{
                            'date d-flex justify-content-between': true,
                            'selected': this.isPeriodSelected('custom'),
                        }"
                        attrs="{
                            'data-period-type': 'custom',
                            'data-mode': dateFilter.editing === 'custom' ? 'edit' : 'view',
                        }"
                        onSelected="() => this.selectDateFilter('custom', 'custom' != controller.cachedFilterOptions.date.filter)"
                        closingMode="'none'"
                    >
                        <div class="d-flex align-items-center filter_name">
                            Specific Date
                        </div>

                        <div
                            class="d-flex justify-content-center flex-grow-1"
                            t-if="controller.cachedFilterOptions.date.filter === 'custom'"
                        >
                            <DateTimeInput
                                type="'date'"
                                class="'o-navigable'"
                                value="dateTo('date')"
                                onChange="(dateTo) => this.setDateTo('date', dateTo)"
                            />
                        </div>
                    </DropdownItem>
                </t>

                <t t-if="controller.cachedFilterOptions.date.mode === 'range'">
                    <DropdownItem
                        t-if="shouldDisplayReturnPeriod"
                        tag="'div'"
                        class="{
                            'd-flex justify-content-between date_filter date_filter_tax_period': true,
                            'selected': this.isPeriodSelected('return_period'),
                        }"
                        attrs="{
                            'data-period-type': 'return_period',
                            'data-mode': this.dateFilter.editing === 'return_period' ? 'edit' : 'view',
                        }"
                        onSelected="() => this.selectDateFilter('return_period', controller.cachedFilterOptions.date.period_type != 'return_period')"
                        closingMode="'none'"
                    >
                        <div class="filter_name pe-3">
                            Return Period
                        </div>
                        <div class="d-flex justify-content-between">
                            <button
                                class="btn_previous_date fa fa-caret-left"
                                t-on-click="() => this.selectPreviousPeriod('return_period')"
                            />
                            <input
                                class="o_input input_current_date"
                                type="text"
                                t-att-data-value="this.displayPeriod('return_period')"
                                t-att-value="this.displayPeriod('return_period')"
                                t-att="{'readonly': this.dateFilter.editing !== 'return_period'}"
                                t-on-change="ev => this.saveDateFilter('return_period', ev.target)"
                                t-on-click="ev => this.dateFilter.editing !== 'return_period' and this.isPeriodSelected('return_period') and this.editDateFilter('return_period', ev.target)"
                            />
                            <button
                                class="btn_next_date fa fa-caret-right"
                                t-on-click="() => this.selectNextPeriod('return_period')"
                            />
                        </div>

                    </DropdownItem>
                    <t t-call="account_reports.AccountReportFilterDateSelection"/>

                    <div id="filter_date_divider_range" class="dropdown-divider"/>

                    <DropdownItem
                        tag="'div'"
                        class="{
                            'date d-flex justify-content-between': true,
                            'selected': this.isPeriodSelected('custom'),
                        }"
                        attrs="{
                            'data-period-type': 'custom',
                            'data-mode': dateFilter.editing === 'custom' ? 'edit' : 'view',
                        }"
                        onSelected="() => this.selectDateFilter('custom', 'custom' != controller.cachedFilterOptions.date.filter)"
                        closingMode="'none'"
                    >
                        <div class="d-flex align-items-center">
                            Custom Dates
                        </div>
                        <div class="d-flex flex-row" t-if="controller.cachedFilterOptions.date.filter === 'custom'">
                            <DateTimeInput
                                type="'date'"
                                class="'o-navigable'"
                                value="dateFrom('date')"
                                onChange="(dateFrom) => this.setDateFrom('date', dateFrom)"
                            />
                            <span class="d-flex align-items-center">
                                to
                            </span>
                            <DateTimeInput
                                type="'date'"
                                class="'o-navigable'"
                                value="dateTo('date')"
                                onChange="(dateTo) => this.setDateTo('date', dateTo)"
                            />
                        </div>
                    </DropdownItem>
                </t>
            </t>
        </Dropdown>
    </t>
</templates>

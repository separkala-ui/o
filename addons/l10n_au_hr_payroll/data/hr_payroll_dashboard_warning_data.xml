<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">

        <record id="hr_payroll_dashboard_warning_missing_info" model="hr.payroll.dashboard.warning">
            <field name="name">Employees with missing required information</field>
            <field name="country_id" ref="base.au"/>
            <field name="evaluation_code">
invalid_employees = self.env['hr.employee'].search([
    ('company_id', 'in', self.env.companies.ids),
    '|', '|', '|',
    ('work_phone', '=', False),
    ('private_street', '=', False),
    ('private_city', '=', False),
    ('birthday', '=', False),
])
if invalid_employees:
    warning_count = len(invalid_employees)
    warning_records = invalid_employees
            </field>
        </record>

        <record id="hr_payroll_dashboard_warning_missing_tfn" model="hr.payroll.dashboard.warning">
            <field name="name">Employees who have not provided a TFN declaration after 28 days</field>
            <field name="country_id" ref="base.au"/>
            <field name="evaluation_code">
self.env.cr.execute("""
    SELECT DISTINCT e.id
      FROM hr_employee e
 LEFT JOIN hr_version v
        ON v.id = e.current_version_id
     WHERE v.l10n_au_tfn_declaration = '111111111'
       AND e.create_date &lt; NOW() - INTERVAL '28 days'
       AND e.company_id = any(%s)
       AND e.active
""", [self.env.companies.ids])
if self.env.cr.rowcount:
    warning_count = len(invalid_employees)
    warning_records = self.env['hr.employee'].browse([e[0] for e in self.env.cr.fetchall()])
            </field>
        </record>

        <record id="hr_payroll_dashboard_warning_incorrect_proportion" model="hr.payroll.dashboard.warning">
            <field name="name">Employees who have misconfigured super account proportions</field>
            <field name="country_id" ref="base.au"/>
            <field name="evaluation_code">
au_companies = self.env.companies.filtered(lambda c: c.country_id.code == "AU")
proportions = self.env["l10n_au.super.account"]._read_group(
    [("account_active", "=", True)],
    ["employee_id"],
    having=[("proportion:sum", "!=", 1)],
)
invalid_employees = self.env['hr.employee'].browse([employee.id for employee, in proportions])

if invalid_employees:

    warning_count = len(invalid_employees)
    warning_records = invalid_employees
            </field>
        </record>
    </data>
</odoo>

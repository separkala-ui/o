<?xml version="1.0"?>
<templates>
<t t-name="voip.Keypad">
    <div class="o-voip-Keypad d-flex flex-column justify-content-between flex-grow-1 row-gap-3 w-100" t-att-class="{ 'pb-3 overflow-auto': softphone.inCallView.activeView === 'transfer' }">
        <t t-if="!props.state.showMore or calleeSuggestions.length lte 1">
            <div>
                <t t-call="o-voip-Keypad-searchBar"/>
                <t t-if="!props.dtmf" t-call="o-voip-Keypad-calleeSuggestions"/>
            </div>
            <t t-call="o-voip-Keypad-numpad"/>
        </t>
        <t t-else="" t-call="o-voip-Keypad-showMore"/>
    </div>
</t>

<t t-name="o-voip-Keypad-searchBar">
    <div class="o-voip-Keypad-searchBar position-relative mx-3 mt-3" t-att-class="{ 'mb-3': props.state.showMore }">
        <div class="position-absolute start-0 top-50 translate-middle-y d-flex align-items-center">
            <button t-if="props.state.showMore or props.onClickBack" title="Back" class="btn btn-secondary d-flex p-2" t-on-click="onClickBack">
                <i class="oi oi-arrow-left" aria-hidden="true"/>
            </button>
            <img t-if="phoneNumberStartsWithCountryCode and !props.state.showMore" class="o-voip-countryFlag ms-2" t-attf-src="/base/static/img/country_flags/{{ props.state.input.countryCode.iso }}.png" t-att-alt="flagAltLabel"/>
        </div>
        <div class="pb-1">
            <!-- hack: "data-value" is used to reflect input changes in the DOM, so it immediately triggers the "contains" test helper's MutationObserver, speeding up tests -->
            <input type="text" class="o-voip-Keypad-input form-control border-0 border-bottom px-5 fw-bold text-center transition-none" t-att-placeholder="!props.dtmf and 'Type a name or number'" t-att-class="inputFontSizeClass" t-att-readonly="props.state.showMore or props.dtmf" t-ref="input-ref" t-model="props.state.input.value" t-att-data-value="props.state.input.value" t-on-keydown="onKeydown" t-on-input="onInputDebounced"/>
        </div>
        <t t-if="props.state.input.value and !props.state.showMore and !props.dtmf">
            <button class="btn btn-link position-absolute end-0 top-50 translate-middle-y d-flex p-1 text-reset opacity-75 opacity-100-hover" title="Backspace" t-on-touchend.prevent="onClickBackspace" t-on-click="onClickBackspace">
                <i class="oi oi-backspace-o fa-2x" aria-hidden="true"/>
            </button>
        </t>
    </div>
</t>

<t t-name="o-voip-Keypad-calleeSuggestions">
    <t t-set="suggestions" t-value="calleeSuggestions"/>
    <div t-if="suggestions.length > 0" class="d-flex flex-column mx-3">
        <button class="btn btn-light fw-normal text-truncate" t-out="firstSuggestion" t-on-click="() => this.onClickFirstResult(suggestions.firstResult.contact)"/>
        <button t-if="suggestions.length > 1" class="btn btn-link fw-normal text-truncate" t-on-click="() => this.onClickShowMore()">
            <i class="fa fa-users pe-1" aria-hidden="true"/>
            <t t-esc="showOthersButtonText"/>
        </button>
    </div>
</t>

<t t-name="o-voip-Keypad-numpad">
    <div class="o-voip-Keypad-numpad grid px-3">
        <t t-foreach="keys" t-as="key" t-key="key.key">
            <!-- âš  align-items-stretch necessary for proper alignment on Safari -->
            <button class="btn btn-light d-flex flex-column align-items-stretch g-col-4 gap-1 p-1" t-att-class="{ 'justify-content-center': key.icon }" t-on-click="() => this.onClickKey(key.key)" t-on-touchend.prevent="() => this.onClickKey(key.key)">
                <i t-if="key.icon" t-attf-class="fa {{ key.icon }}"/>
                <span t-else="" class="o-voip-Keypad-digit fw-bolder lh-1" t-esc="key.key"/>
                <span t-if="key.letters" class="smaller fw-bold opacity-50" t-esc="key.letters"/>
            </button>
        </t>
    </div>
</t>

<t t-name="o-voip-Keypad-showMore">
    <Tab itemsBySection="calleeSuggestions.searchResultsBySearchField" state="props.state" extraClass="'border-top overflow-auto'">
        <t t-set-slot="top">
            <t t-call="o-voip-Keypad-searchBar"/>
        </t>
        <t t-set-slot="entry" t-slot-scope="slot">
            <t t-set="contact" t-value="slot.item.contact"/>
            <t t-set="countryCode" t-value="contact.country_code_from_phone"/>
            <t t-set="isFolded" t-value="!contact.eq(voip.softphone.activeRecord)"/>
            <TabEntry
                avatarUrl="contact.avatarUrl"
                countryCode="countryCode"
                title="getTitle(slot.item)"
                subtitle="getSubtitle(slot.item)"
                phoneNumber="contact.phone"
                record="contact"
                section="slot.section"
            >
                <t t-set-slot="side">
                    <t t-if="isFolded">
                        <t t-if="props.slots?.primaryAction" t-slot="primaryAction" contact="contact" isSmall="true"/>
                        <ActionButton t-else=""
                            hideLabel="true"
                            icon="'fa-phone'"
                            type="'outline-success'"
                            onClick="() => this.onClickCall(contact)"
                            isSmall="true"
                            name.translate="Call"
                        />
                    </t>
                </t>
                <t t-set-slot="info">
                    <p class="mb-0 opacity-75 text-truncate">
                        <span t-if="countryCode" class="o-voip-countryFlag-wrapper d-inline-block me-1 align-middle">
                            <img class="o-voip-countryFlag mx-auto" t-attf-src="/base/static/img/country_flags/{{ countryCode }}.png" t-att-alt="flagAlt"/>
                        </span>
                        <i t-else="" class="fa fa-phone fa-fw me-1"/>
                        <span t-att-class="{ 'align-middle': countryCode }" t-esc="contact.phone"/>
                    </p>
                </t>
                <t t-set-slot="actions">
                    <ActionButton
                        name.translate="Contact"
                        title.translate="View contact information"
                        icon="'oi-user'"
                        onClick="() => this.onClickContact(contact)"
                    />
                    <t class="o-voip-AddressBook-xpathTarget"/>
                    <ActionButton
                        name.translate="Activity"
                        title.translate="Schedule an activity"
                        icon="'oi-activity-plus'"
                        onClick="() => this.onClickActivity(contact)"
                    />
                </t>
                <t t-set-slot="call-to-action">
                    <t class="o-voip-AddressBook-sms-xpathTarget"/>
                    <t t-if="props.slots?.primaryAction" t-slot="primaryAction" contact="contact" isSmall="false"/>
                    <ActionButton t-else=""
                        name.translate="Call"
                        icon="'fa-phone'"
                        type="'success'"
                        onClick="() => this.onClickCall(contact)"
                    />
                </t>
            </TabEntry>
        </t>
    </Tab>
</t>
</templates>
